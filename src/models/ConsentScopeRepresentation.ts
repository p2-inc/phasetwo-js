/* tslint:disable */
/* eslint-disable */
/**
 * Keycloak Account API
 * Derived from the code at https://github.com/keycloak/keycloak/blob/main/services/src/main/java/org/keycloak/services/resources/account/AccountRestService.java 
 *
 * The version of the OpenAPI document: 20.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ConsentScopeRepresentation
 */
export interface ConsentScopeRepresentation {
    /**
     * 
     * @type {string}
     * @memberof ConsentScopeRepresentation
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ConsentScopeRepresentation
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ConsentScopeRepresentation
     */
    displayText?: string;
}

/**
 * Check if a given object implements the ConsentScopeRepresentation interface.
 */
export function instanceOfConsentScopeRepresentation(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConsentScopeRepresentationFromJSON(json: any): ConsentScopeRepresentation {
    return ConsentScopeRepresentationFromJSONTyped(json, false);
}

export function ConsentScopeRepresentationFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConsentScopeRepresentation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'displayText': !exists(json, 'displayText') ? undefined : json['displayText'],
    };
}

export function ConsentScopeRepresentationToJSON(value?: ConsentScopeRepresentation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'displayText': value.displayText,
    };
}

