/* tslint:disable */
/* eslint-disable */
/**
 * Keycloak Account API
 * Derived from the code at https://github.com/keycloak/keycloak/blob/main/services/src/main/java/org/keycloak/services/resources/account/AccountRestService.java 
 *
 * The version of the OpenAPI document: 20.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserProfileMetadataRepresentation } from './UserProfileMetadataRepresentation';
import {
    UserProfileMetadataRepresentationFromJSON,
    UserProfileMetadataRepresentationFromJSONTyped,
    UserProfileMetadataRepresentationToJSON,
} from './UserProfileMetadataRepresentation';

/**
 * 
 * @export
 * @interface AccountRepresentation
 */
export interface AccountRepresentation {
    /**
     * 
     * @type {string}
     * @memberof AccountRepresentation
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof AccountRepresentation
     */
    username?: string;
    /**
     * 
     * @type {string}
     * @memberof AccountRepresentation
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof AccountRepresentation
     */
    lastName?: string;
    /**
     * 
     * @type {string}
     * @memberof AccountRepresentation
     */
    email?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AccountRepresentation
     */
    emailVerified?: boolean;
    /**
     * 
     * @type {UserProfileMetadataRepresentation}
     * @memberof AccountRepresentation
     */
    userProfileMetadata?: UserProfileMetadataRepresentation;
}

/**
 * Check if a given object implements the AccountRepresentation interface.
 */
export function instanceOfAccountRepresentation(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AccountRepresentationFromJSON(json: any): AccountRepresentation {
    return AccountRepresentationFromJSONTyped(json, false);
}

export function AccountRepresentationFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountRepresentation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'username': !exists(json, 'username') ? undefined : json['username'],
        'firstName': !exists(json, 'firstName') ? undefined : json['firstName'],
        'lastName': !exists(json, 'lastName') ? undefined : json['lastName'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'emailVerified': !exists(json, 'emailVerified') ? undefined : json['emailVerified'],
        'userProfileMetadata': !exists(json, 'userProfileMetadata') ? undefined : UserProfileMetadataRepresentationFromJSON(json['userProfileMetadata']),
    };
}

export function AccountRepresentationToJSON(value?: AccountRepresentation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'username': value.username,
        'firstName': value.firstName,
        'lastName': value.lastName,
        'email': value.email,
        'emailVerified': value.emailVerified,
        'userProfileMetadata': UserProfileMetadataRepresentationToJSON(value.userProfileMetadata),
    };
}

