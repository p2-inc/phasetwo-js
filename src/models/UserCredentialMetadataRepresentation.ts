/* tslint:disable */
/* eslint-disable */
/**
 * Keycloak Account API
 * Derived from the code at https://github.com/keycloak/keycloak/blob/main/services/src/main/java/org/keycloak/services/resources/account/AccountRestService.java 
 *
 * The version of the OpenAPI document: 20.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CredentialMetadataRepresentation } from './CredentialMetadataRepresentation';
import {
    CredentialMetadataRepresentationFromJSON,
    CredentialMetadataRepresentationFromJSONTyped,
    CredentialMetadataRepresentationToJSON,
} from './CredentialMetadataRepresentation';

/**
 * 
 * @export
 * @interface UserCredentialMetadataRepresentation
 */
export interface UserCredentialMetadataRepresentation {
    /**
     * 
     * @type {CredentialMetadataRepresentation}
     * @memberof UserCredentialMetadataRepresentation
     */
    credential?: CredentialMetadataRepresentation;
}

/**
 * Check if a given object implements the UserCredentialMetadataRepresentation interface.
 */
export function instanceOfUserCredentialMetadataRepresentation(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserCredentialMetadataRepresentationFromJSON(json: any): UserCredentialMetadataRepresentation {
    return UserCredentialMetadataRepresentationFromJSONTyped(json, false);
}

export function UserCredentialMetadataRepresentationFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserCredentialMetadataRepresentation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'credential': !exists(json, 'credential') ? undefined : CredentialMetadataRepresentationFromJSON(json['credential']),
    };
}

export function UserCredentialMetadataRepresentationToJSON(value?: UserCredentialMetadataRepresentation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'credential': CredentialMetadataRepresentationToJSON(value.credential),
    };
}

